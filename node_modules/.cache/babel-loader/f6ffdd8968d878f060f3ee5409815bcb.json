{"ast":null,"code":"import { GET_ARTISTS, UPDATE_GENERAL_ERROR } from \"../../../actionTypes\";\nimport BackendCall from \"../../../BackendCall\";\n/**\n* Makes a call to the backend to select all artists that have at least\n* this genre within their list of genres given by spotify.\n* @param {string} genre - selected genre from browse by genre route\n*/\n\nexport function getArtists(genre) {\n  return async function (dispatch) {\n    try {\n      const artists = await BackendCall.getArtistByGenre(genre);\n      dispatch(addArtists(artists));\n    } catch (e) {\n      dispatch(updateGeneralError(true));\n    }\n\n    ;\n  };\n}\n;\n\nfunction addArtists(artists) {\n  return {\n    type: GET_ARTISTS,\n    artists\n  };\n}\n\n;\n\nfunction updateGeneralError(generalError) {\n  return {\n    type: UPDATE_GENERAL_ERROR,\n    generalError\n  };\n}\n\n;","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/actionCreators/BrowseRoute/Genre/getArtistsCreator.js"],"names":["GET_ARTISTS","UPDATE_GENERAL_ERROR","BackendCall","getArtists","genre","dispatch","artists","getArtistByGenre","addArtists","e","updateGeneralError","type","generalError"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,oBAArB,QAAgD,sBAAhD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEhC,SAAO,gBAAeC,QAAf,EAAyB;AAC9B,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMJ,WAAW,CAACK,gBAAZ,CAA6BH,KAA7B,CAAtB;AACAC,MAAAA,QAAQ,CAACG,UAAU,CAACF,OAAD,CAAX,CAAR;AACD,KAHD,CAGE,OAAMG,CAAN,EAAS;AACTJ,MAAAA,QAAQ,CAACK,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACD;;AAAA;AACF,GAPD;AAQD;AAAA;;AAED,SAASF,UAAT,CAAoBF,OAApB,EAA6B;AAC3B,SAAO;AAACK,IAAAA,IAAI,EAAEX,WAAP;AAAoBM,IAAAA;AAApB,GAAP;AACD;;AAAA;;AAED,SAASI,kBAAT,CAA4BE,YAA5B,EAA0C;AACxC,SAAO;AAACD,IAAAA,IAAI,EAAEV,oBAAP;AAA6BW,IAAAA;AAA7B,GAAP;AACD;;AAAA","sourcesContent":["import {GET_ARTISTS, UPDATE_GENERAL_ERROR} from \"../../../actionTypes\";\nimport BackendCall from \"../../../BackendCall\";\n\n/**\n* Makes a call to the backend to select all artists that have at least\n* this genre within their list of genres given by spotify.\n* @param {string} genre - selected genre from browse by genre route\n*/\nexport function getArtists(genre) {\n\n  return async function(dispatch) {\n    try {\n      const artists = await BackendCall.getArtistByGenre(genre);\n      dispatch(addArtists(artists));\n    } catch(e) {\n      dispatch(updateGeneralError(true));\n    };\n  };\n};\n\nfunction addArtists(artists) {\n  return {type: GET_ARTISTS, artists};\n};\n\nfunction updateGeneralError(generalError) {\n  return {type: UPDATE_GENERAL_ERROR, generalError};\n};"]},"metadata":{},"sourceType":"module"}