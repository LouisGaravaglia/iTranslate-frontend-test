{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/LanguageSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport './Sass/App.scss'; //COMPONENT IMPORTS\n\nimport SearchBar from \"./SearchBar\"; //REDUX IMPORTS\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTranslation } from \"./actionCreators/getTranslationCreator\"; //IONICONS IMPORTS\n\nimport IosMusicalNotes from 'react-ionicons/lib/IosMusicalNotes';\n\nfunction LanguageSelect({\n  selectedTrackId,\n  typeOfSearch\n}) {\n  _s();\n\n  //REACT STATE\n  const [isLoading, setIsLoading] = useState(false); //REDUX STORE\n\n  const dispatch = useDispatch();\n  const languages = useSelector(store => store.languages);\n  const lyrics = useSelector(store => store.lyrics);\n  const translation = useSelector(store => store.translation);\n  const translationError = useSelector(store => store.errors.translationError);\n  const languageError = useSelector(store => store.errors.languageError); ////////////////////////////////////////////////////  USE EFFECTS  ////////////////////////////////////////////////////\n  //WATCHES FOR EITHER AN ERROR OR THE TRANSLATION TO COME THROUGH TO REMOVE LOADING ICON\n\n  useEffect(() => {\n    const updateIsLoading = () => {\n      if (translation || translationError || languageError) {\n        setIsLoading(false);\n      }\n    };\n\n    updateIsLoading();\n  }, [translation, translationError, languageError]); ////////////////////////////////////////////////////  HANDLE CLICK FUNCTIONS  ////////////////////////////////////////////////////\n\n  const handleLanguageSearchSubmit = async searchVal => {\n    setIsLoading(true);\n\n    try {\n      dispatch(getTranslation(searchVal, languages, selectedTrackId, lyrics));\n    } catch (e) {\n      setIsLoading(false);\n    }\n\n    ;\n  }; ////////////////////////////////////////////////////  JSX  ////////////////////////////////////////////////////\n  //DISPLAY LOADING ICON\n\n\n  let LoadingIconDiv;\n  if (isLoading) LoadingIconDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Loading-Box\",\n    children: /*#__PURE__*/_jsxDEV(IosMusicalNotes, {\n      rotate: true,\n      fontSize: \"200px\",\n      color: \"#fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n  if (!isLoading) LoadingIconDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Loading-Box\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      config: {\n        delay: 300,\n        duration: 300\n      },\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: props,\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          loadingIcon: LoadingIconDiv,\n          header: \"What language would you like your lyrics translated to?\",\n          handleSubmit: handleLanguageSearchSubmit,\n          typeOfSearch: typeOfSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LanguageSelect, \"Rn6KRjlcSOCaQ7h/cAqeCRSPRyo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LanguageSelect;\n;\nexport default LanguageSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelect\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/LanguageSelect.js"],"names":["React","useState","useEffect","Spring","SearchBar","useDispatch","useSelector","getTranslation","IosMusicalNotes","LanguageSelect","selectedTrackId","typeOfSearch","isLoading","setIsLoading","dispatch","languages","store","lyrics","translation","translationError","errors","languageError","updateIsLoading","handleLanguageSearchSubmit","searchVal","e","LoadingIconDiv","opacity","delay","duration","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Spring} from 'react-spring/renderprops';\nimport './Sass/App.scss';\n//COMPONENT IMPORTS\nimport SearchBar from \"./SearchBar\";\n//REDUX IMPORTS\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getTranslation} from \"./actionCreators/getTranslationCreator\";\n//IONICONS IMPORTS\nimport IosMusicalNotes from 'react-ionicons/lib/IosMusicalNotes';\n\nfunction LanguageSelect({selectedTrackId, typeOfSearch}) {\n  //REACT STATE\n  const [isLoading, setIsLoading] = useState(false);\n  //REDUX STORE\n  const dispatch = useDispatch();\n  const languages = useSelector(store => store.languages);\n  const lyrics = useSelector(store => store.lyrics);\n  const translation = useSelector(store => store.translation);\n  const translationError = useSelector(store => store.errors.translationError);\n  const languageError = useSelector(store => store.errors.languageError);\n\n////////////////////////////////////////////////////  USE EFFECTS  ////////////////////////////////////////////////////\n\n  //WATCHES FOR EITHER AN ERROR OR THE TRANSLATION TO COME THROUGH TO REMOVE LOADING ICON\n  useEffect(() => {\n\n    const updateIsLoading = () => {\n      if (translation || translationError || languageError) {\n        setIsLoading(false);\n      }\n    };\n    updateIsLoading();\n  }, [translation, translationError, languageError])\n\n////////////////////////////////////////////////////  HANDLE CLICK FUNCTIONS  ////////////////////////////////////////////////////\n\n  const handleLanguageSearchSubmit = async (searchVal) => {\n    setIsLoading(true);\n    try {\n      dispatch(getTranslation(searchVal, languages, selectedTrackId, lyrics));\n    } catch(e) {\n      setIsLoading(false);\n    };\n  };\n\n////////////////////////////////////////////////////  JSX  ////////////////////////////////////////////////////\n\n  //DISPLAY LOADING ICON\n  let LoadingIconDiv;\n  \n  if (isLoading) LoadingIconDiv = (\n    <div className=\"Loading-Box\">\n      <IosMusicalNotes rotate={true} fontSize=\"200px\" color=\"#fff\"/>\n    </div>\n  );\n\n  if (!isLoading) LoadingIconDiv = (\n    <div className=\"Loading-Box\"></div>\n  );\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <div>\n      <Spring\n        from={{opacity: 0}}\n        to={{opacity: 1}}\n        config={{delay: 300, duration: 300}}\n      >\n      {props => (\n        <div style={props}>\n  \n            <SearchBar loadingIcon={LoadingIconDiv} header=\"What language would you like your lyrics translated to?\" handleSubmit={handleLanguageSearchSubmit} typeOfSearch={typeOfSearch}/>\n         \n        </div>\n      )}\n    </Spring>\n  </div>\n  );\n};\n\nexport default LanguageSelect;"]},"metadata":{},"sourceType":"module"}