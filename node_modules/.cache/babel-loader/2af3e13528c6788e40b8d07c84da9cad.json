{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/Genres.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport './Sass/App.scss'; //COMPONENT IMPORTS\n\nimport SearchResultList from \"./SearchResultList\"; //REDUX IMPORTS\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getArtists } from \"./actionCreators/BrowseRoute/Genre/getArtistsCreator\";\nimport { resetStore } from \"./actionCreators/resetStoreCreator\";\nimport { getGenres } from \"./actionCreators/BrowseRoute/Genre/getGenresCreator\";\n\nfunction Genres({\n  fontColor1,\n  fontColor2\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const genres = useSelector(store => store.genres); ////////////////////////////////////////////////////  USE EFFECTS  ////////////////////////////////////////////////////\n  //GET ALL GENRES IN DB AND STORE THEM FOR THE BROWSE BY GENRE COMPONENT\n\n  useEffect(() => {\n    async function getSeedData() {\n      dispatch(getGenres());\n    }\n\n    getSeedData();\n  }, [dispatch]); ////////////////////////////////////////////////////  HANDLE CLICK FUNCTIONS  ////////////////////////////////////////////////////\n\n  const handleGenreClick = async genre => {\n    dispatch(getArtists({\n      genre\n    }));\n    dispatch(resetStore(\"albums\", \"tracks\", \"lyrics\", \"translation\"));\n  }; ////////////////////////////////////////////////////  JSX  ////////////////////////////////////////////////////\n  //DISPLAY GENRES\n\n\n  let GenresDiv;\n  if (genres) GenresDiv = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-Container\",\n    children: /*#__PURE__*/_jsxDEV(SearchResultList, {\n      typeOfResults: \"genres\",\n      resultsArray: genres,\n      handleSearch: handleGenreClick,\n      itemsPerPage: 1,\n      fontColor1: fontColor1,\n      fontColor2: fontColor2\n    }, genres.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n  if (!genres) GenresDiv = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      delay: 300,\n      duration: 300\n    },\n    children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: props,\n      children: GenresDiv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Genres, \"/VCunv1Qcu6oAypyWzGbNblFmX4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Genres;\n;\nexport default Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/Genres.js"],"names":["React","useEffect","Spring","SearchResultList","useDispatch","useSelector","getArtists","resetStore","getGenres","Genres","fontColor1","fontColor2","dispatch","genres","store","getSeedData","handleGenreClick","genre","GenresDiv","length","opacity","delay","duration","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAO,iBAAP,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,UAAR,QAAyB,sDAAzB;AACA,SAAQC,UAAR,QAAyB,oCAAzB;AACA,SAAQC,SAAR,QAAwB,qDAAxB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAhB,EAA0C;AAAA;;AACxC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B,CAFwC,CAI1C;AAEE;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,mBAAec,WAAf,GAA6B;AAC3BH,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD;;AACDO,IAAAA,WAAW;AACZ,GANQ,EAMN,CAACH,QAAD,CANM,CAAT,CAPwC,CAe1C;;AAEE,QAAMI,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxCL,IAAAA,QAAQ,CAACN,UAAU,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAX,CAAR;AACAL,IAAAA,QAAQ,CAACL,UAAU,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,aAA/B,CAAX,CAAR;AACD,GAHD,CAjBwC,CAsB1C;AAEE;;;AACA,MAAIW,SAAJ;AAEA,MAAIL,MAAJ,EAAYK,SAAS,gBACnB;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,gBAAD;AAAsC,MAAA,aAAa,EAAC,QAApD;AAA6D,MAAA,YAAY,EAAEL,MAA3E;AAAmF,MAAA,YAAY,EAAEG,gBAAjG;AAAmH,MAAA,YAAY,EAAE,CAAjI;AAAoI,MAAA,UAAU,EAAEN,UAAhJ;AAA4J,MAAA,UAAU,EAAEC;AAAxK,OAAuBE,MAAM,CAACM,MAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADU;AAMZ,MAAI,CAACN,MAAL,EAAaK,SAAS,gBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW,CAjC2B,CAqC1C;;AAEE,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAE;AAACE,MAAAA,OAAO,EAAE;AAAV,KADR;AAEE,IAAA,EAAE,EAAE;AAACA,MAAAA,OAAO,EAAE;AAAV,KAFN;AAGE,IAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAHV;AAAA,cAKGC,KAAK,iBACJ;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAA,gBAEGL;AAFH;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtDQT,M;UACUL,W,EACFC,W;;;KAFRI,M;AAsDR;AAED,eAAeA,MAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport './Sass/App.scss';\n//COMPONENT IMPORTS\nimport SearchResultList from \"./SearchResultList\";\n//REDUX IMPORTS\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getArtists} from \"./actionCreators/BrowseRoute/Genre/getArtistsCreator\";\nimport {resetStore} from \"./actionCreators/resetStoreCreator\";\nimport {getGenres} from \"./actionCreators/BrowseRoute/Genre/getGenresCreator\";\n\nfunction Genres({fontColor1, fontColor2}) {\n  const dispatch = useDispatch();\n  const genres = useSelector(store => store.genres);\n\n////////////////////////////////////////////////////  USE EFFECTS  ////////////////////////////////////////////////////\n\n  //GET ALL GENRES IN DB AND STORE THEM FOR THE BROWSE BY GENRE COMPONENT\n  useEffect(() => {\n\n    async function getSeedData() {\n      dispatch(getGenres());\n    }\n    getSeedData();\n  }, [dispatch]);\n\n////////////////////////////////////////////////////  HANDLE CLICK FUNCTIONS  ////////////////////////////////////////////////////\n\n  const handleGenreClick = async (genre) => {\n    dispatch(getArtists({genre}));\n    dispatch(resetStore(\"albums\", \"tracks\", \"lyrics\", \"translation\"));\n  };\n\n////////////////////////////////////////////////////  JSX  ////////////////////////////////////////////////////\n\n  //DISPLAY GENRES\n  let GenresDiv;\n  \n  if (genres) GenresDiv = (\n    <div className=\"Main-Container\">\n      <SearchResultList key={genres.length} typeOfResults=\"genres\" resultsArray={genres} handleSearch={handleGenreClick} itemsPerPage={1} fontColor1={fontColor1} fontColor2={fontColor2}/>\n    </div>  \n  );\n\n  if (!genres) GenresDiv = (\n    <p>Loading</p>\n  );\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <Spring\n      from={{opacity: 0}}\n      to={{opacity: 1}}\n      config={{delay: 300, duration: 300}}\n    >\n      {props => (\n        <div style={props}>\n          \n          {GenresDiv}\n\n        </div>\n      )}\n  </Spring>\n  );\n};\n\nexport default Genres;"]},"metadata":{},"sourceType":"module"}