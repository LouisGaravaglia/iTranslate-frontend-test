{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/Albums.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Spring } from 'react-spring/renderprops';\nimport './Sass/App.scss'; //COMPONENT IMPORTS\n\nimport SearchResultList from \"./SearchResultList\"; //REDUX IMPORTS\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTracks } from \"./actionCreators/BrowseRoute/Artists/getTracksCreator\";\nimport { resetStore } from \"./actionCreators/resetStoreCreator\"; //CUSTOM HOOK IMPORTS\n\nimport useViewport from \"./hooks/useViewport\";\n\nfunction Albums({\n  typeOfAlbums\n}) {\n  _s();\n\n  //REDUX STORE\n  const dispatch = useDispatch();\n  const albums = useSelector(store => store.albums); //VIEWPORT SIZE BASED VARIABLES\n\n  const {\n    viewportWidth\n  } = useViewport();\n  let itemsPerPage;\n  let albumKey; //VIEWPORT BREAKPOINTS TO DETERMINT HOW MANY ALBUM COVERS TO DISPLAY AT ONCE\n\n  if (viewportWidth < 1180 && viewportWidth > 780) {\n    itemsPerPage = 2;\n  } else if (viewportWidth < 780) {\n    itemsPerPage = 1;\n  } else {\n    itemsPerPage = 3;\n  }\n\n  ; //ALBUM KEY WHICH WOULD CHANGE IF ITEMS PER PAGE CHANGED TO RERENDER COMPONENT IF NUMBER OF ALUMBS DISPLAYING IS CHANGING\n\n  if (itemsPerPage < albums.length) {\n    albumKey = itemsPerPage;\n  } else {\n    albumKey = 0;\n  }\n\n  ; ////////////////////////////////////////////////////  HANDLE CLICK FUNCTIONS  ////////////////////////////////////////////////////\n\n  const handleAlbumClick = async albumId => {\n    dispatch(getTracks(albumId));\n    dispatch(resetStore(\"lyrics\", \"translation\"));\n  }; ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(Spring, {\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: 1\n    },\n    config: {\n      delay: 300,\n      duration: 300\n    },\n    children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: props,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main-Container\",\n        children: /*#__PURE__*/_jsxDEV(SearchResultList, {\n          typeOfResults: \"albums\",\n          resultsArray: albums,\n          handleSearch: handleAlbumClick,\n          itemsPerPage: itemsPerPage,\n          typeOfAlbums: typeOfAlbums\n        }, albums[albumKey].albumId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Albums, \"GvO7ITNeFM7eocJ8CTObd8aUWUI=\", false, function () {\n  return [useDispatch, useSelector, useViewport];\n});\n\n_c = Albums;\n;\nexport default Albums;\n\nvar _c;\n\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/Albums.js"],"names":["React","Spring","SearchResultList","useDispatch","useSelector","getTracks","resetStore","useViewport","Albums","typeOfAlbums","dispatch","albums","store","viewportWidth","itemsPerPage","albumKey","length","handleAlbumClick","albumId","opacity","delay","duration","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,0BAArB;AACA,OAAO,iBAAP,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,uDAAxB;AACA,SAAQC,UAAR,QAAyB,oCAAzB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAgC;AAAA;;AAC9B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B,CAH8B,CAI9B;;AACA,QAAM;AAACE,IAAAA;AAAD,MAAkBN,WAAW,EAAnC;AACA,MAAIO,YAAJ;AACA,MAAIC,QAAJ,CAP8B,CAS9B;;AACA,MAAIF,aAAa,GAAG,IAAhB,IAAwBA,aAAa,GAAG,GAA5C,EAAiD;AAC/CC,IAAAA,YAAY,GAAG,CAAf;AACD,GAFD,MAEO,IAAID,aAAa,GAAG,GAApB,EAAyB;AAC9BC,IAAAA,YAAY,GAAG,CAAf;AACD,GAFM,MAEA;AACLA,IAAAA,YAAY,GAAG,CAAf;AACD;;AAAA,GAhB6B,CAkB9B;;AACA,MAAIA,YAAY,GAAGH,MAAM,CAACK,MAA1B,EAAkC;AAChCD,IAAAA,QAAQ,GAAGD,YAAX;AACD,GAFD,MAEO;AACLC,IAAAA,QAAQ,GAAG,CAAX;AACD;;AAAA,GAvB6B,CAyBhC;;AAEE,QAAME,gBAAgB,GAAG,MAAOC,OAAP,IAAmB;AAC1CR,IAAAA,QAAQ,CAACL,SAAS,CAACa,OAAD,CAAV,CAAR;AACAR,IAAAA,QAAQ,CAACJ,UAAU,CAAC,QAAD,EAAW,aAAX,CAAX,CAAR;AACD,GAHD,CA3B8B,CAgChC;;;AAEE,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAE;AAACa,MAAAA,OAAO,EAAE;AAAV,KADR;AAEE,IAAA,EAAE,EAAE;AAACA,MAAAA,OAAO,EAAE;AAAV,KAFN;AAGE,IAAA,MAAM,EAAE;AAACC,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,QAAQ,EAAE;AAAvB,KAHV;AAAA,cAKGC,KAAK,iBACJ;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAA,6BAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE,QAAC,gBAAD;AAAiD,UAAA,aAAa,EAAC,QAA/D;AAAwE,UAAA,YAAY,EAAEX,MAAtF;AAA8F,UAAA,YAAY,EAAEM,gBAA5G;AAA8H,UAAA,YAAY,EAAEH,YAA5I;AAA0J,UAAA,YAAY,EAAEL;AAAxK,WAAuBE,MAAM,CAACI,QAAD,CAAN,CAAiBG,OAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnDQV,M;UAEUL,W,EACFC,W,EAESG,W;;;KALjBC,M;AAmDR;AAED,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport {Spring} from 'react-spring/renderprops';\nimport './Sass/App.scss';\n//COMPONENT IMPORTS\nimport SearchResultList from \"./SearchResultList\";\n//REDUX IMPORTS\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getTracks} from \"./actionCreators/BrowseRoute/Artists/getTracksCreator\";\nimport {resetStore} from \"./actionCreators/resetStoreCreator\";\n//CUSTOM HOOK IMPORTS\nimport useViewport from \"./hooks/useViewport\";\n\nfunction Albums({typeOfAlbums}) {\n  //REDUX STORE\n  const dispatch = useDispatch();\n  const albums = useSelector(store => store.albums);\n  //VIEWPORT SIZE BASED VARIABLES\n  const {viewportWidth} = useViewport();\n  let itemsPerPage;\n  let albumKey;\n\n  //VIEWPORT BREAKPOINTS TO DETERMINT HOW MANY ALBUM COVERS TO DISPLAY AT ONCE\n  if (viewportWidth < 1180 && viewportWidth > 780) {\n    itemsPerPage = 2;\n  } else if (viewportWidth < 780) {\n    itemsPerPage = 1;\n  } else {\n    itemsPerPage = 3;\n  };\n\n  //ALBUM KEY WHICH WOULD CHANGE IF ITEMS PER PAGE CHANGED TO RERENDER COMPONENT IF NUMBER OF ALUMBS DISPLAYING IS CHANGING\n  if (itemsPerPage < albums.length) {\n    albumKey = itemsPerPage;\n  } else {\n    albumKey = 0;\n  };\n\n////////////////////////////////////////////////////  HANDLE CLICK FUNCTIONS  ////////////////////////////////////////////////////\n\n  const handleAlbumClick = async (albumId) => {\n    dispatch(getTracks(albumId));\n    dispatch(resetStore(\"lyrics\", \"translation\"));\n  };\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <Spring\n      from={{opacity: 0}}\n      to={{opacity: 1}}\n      config={{delay: 300, duration: 300}}\n    >\n      {props => (\n        <div style={props}>\n\n          <div className=\"Main-Container\">\n            <SearchResultList key={albums[albumKey].albumId} typeOfResults=\"albums\" resultsArray={albums} handleSearch={handleAlbumClick} itemsPerPage={itemsPerPage} typeOfAlbums={typeOfAlbums}/>\n          </div>\n\n        </div>\n      )}\n    </Spring>\n  );\n};\n\nexport default Albums;"]},"metadata":{},"sourceType":"module"}