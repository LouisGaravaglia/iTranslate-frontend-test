{"ast":null,"code":"import { RESET_TRANSLATION, RESET_LYRICS, RESET_TRACKS, RESET_ALBUMS, RESET_ARTISTS, RESET_SEARCH_RESULTS, RESET_SELECTED_TRACK } from \"../actionTypes\";\n/**\n* Creator that will reset the specific piece of state back to \n* it's initial state. This does not include the handle errors state.\n* @param {array} specificState - an array of strings that correspond with a piece of state\n*/\n\nexport function resetStore(...specificState) {\n  return async function (dispatch) {\n    for (let i = 0; i < specificState.length; i++) {\n      if (specificState[i] === \"artists\") dispatch(resetArtists());\n      if (specificState[i] === \"albums\") dispatch(resetAlbums());\n      if (specificState[i] === \"tracks\") dispatch(resetTracks());\n      if (specificState[i] === \"lyrics\") dispatch(resetLyrics());\n      if (specificState[i] === \"translation\") dispatch(resetTranslation());\n      if (specificState[i] === \"searchResults\") dispatch(resetSearchResults());\n      if (specificState[i] === \"selectedTrack\") dispatch(resetSelectedTrack());\n    }\n\n    ;\n  };\n}\n;\n\nfunction resetArtists() {\n  return {\n    type: RESET_ARTISTS\n  };\n}\n\n;\n\nfunction resetAlbums() {\n  return {\n    type: RESET_ALBUMS\n  };\n}\n\n;\n\nfunction resetTracks() {\n  return {\n    type: RESET_TRACKS\n  };\n}\n\n;\n\nfunction resetLyrics() {\n  return {\n    type: RESET_LYRICS\n  };\n}\n\n;\n\nfunction resetTranslation() {\n  return {\n    type: RESET_TRANSLATION\n  };\n}\n\n;\n\nfunction resetSearchResults() {\n  return {\n    type: RESET_SEARCH_RESULTS\n  };\n}\n\n;\n\nfunction resetSelectedTrack() {\n  return {\n    type: RESET_SELECTED_TRACK\n  };\n}\n\n;","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/actionCreators/resetStoreCreator.js"],"names":["RESET_TRANSLATION","RESET_LYRICS","RESET_TRACKS","RESET_ALBUMS","RESET_ARTISTS","RESET_SEARCH_RESULTS","RESET_SELECTED_TRACK","resetStore","specificState","dispatch","i","length","resetArtists","resetAlbums","resetTracks","resetLyrics","resetTranslation","resetSearchResults","resetSelectedTrack","type"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,YAA3B,EAAyCC,YAAzC,EAAuDC,YAAvD,EAAqEC,aAArE,EAAoFC,oBAApF,EAA0GC,oBAA1G,QAAqI,gBAArI;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoB,GAAGC,aAAvB,EAAsC;AAE3C,SAAO,gBAAeC,QAAf,EAAyB;AAE9B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,aAAa,CAACG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIF,aAAa,CAACE,CAAD,CAAb,KAAqB,SAAzB,EAAoCD,QAAQ,CAACG,YAAY,EAAb,CAAR;AACpC,UAAIJ,aAAa,CAACE,CAAD,CAAb,KAAqB,QAAzB,EAAmCD,QAAQ,CAACI,WAAW,EAAZ,CAAR;AACnC,UAAIL,aAAa,CAACE,CAAD,CAAb,KAAqB,QAAzB,EAAmCD,QAAQ,CAACK,WAAW,EAAZ,CAAR;AACnC,UAAIN,aAAa,CAACE,CAAD,CAAb,KAAqB,QAAzB,EAAmCD,QAAQ,CAACM,WAAW,EAAZ,CAAR;AACnC,UAAIP,aAAa,CAACE,CAAD,CAAb,KAAqB,aAAzB,EAAwCD,QAAQ,CAACO,gBAAgB,EAAjB,CAAR;AACxC,UAAIR,aAAa,CAACE,CAAD,CAAb,KAAqB,eAAzB,EAA0CD,QAAQ,CAACQ,kBAAkB,EAAnB,CAAR;AAC1C,UAAIT,aAAa,CAACE,CAAD,CAAb,KAAqB,eAAzB,EAA0CD,QAAQ,CAACS,kBAAkB,EAAnB,CAAR;AAC3C;;AAAA;AACF,GAXD;AAYD;AAAA;;AAED,SAASN,YAAT,GAAwB;AACtB,SAAO;AAACO,IAAAA,IAAI,EAAEf;AAAP,GAAP;AACD;;AAAA;;AAED,SAASS,WAAT,GAAuB;AACrB,SAAO;AAACM,IAAAA,IAAI,EAAEhB;AAAP,GAAP;AACD;;AAAA;;AAED,SAASW,WAAT,GAAuB;AACrB,SAAO;AAACK,IAAAA,IAAI,EAAEjB;AAAP,GAAP;AACD;;AAAA;;AAED,SAASa,WAAT,GAAuB;AACrB,SAAO;AAACI,IAAAA,IAAI,EAAElB;AAAP,GAAP;AACD;;AAAA;;AAED,SAASe,gBAAT,GAA4B;AAC1B,SAAO;AAACG,IAAAA,IAAI,EAAEnB;AAAP,GAAP;AACD;;AAAA;;AAED,SAASiB,kBAAT,GAA8B;AAC5B,SAAO;AAACE,IAAAA,IAAI,EAAEd;AAAP,GAAP;AACD;;AAAA;;AAED,SAASa,kBAAT,GAA8B;AAC5B,SAAO;AAACC,IAAAA,IAAI,EAAEb;AAAP,GAAP;AACD;;AAAA","sourcesContent":["import {RESET_TRANSLATION, RESET_LYRICS, RESET_TRACKS, RESET_ALBUMS, RESET_ARTISTS, RESET_SEARCH_RESULTS, RESET_SELECTED_TRACK} from \"../actionTypes\";\n\n/**\n* Creator that will reset the specific piece of state back to \n* it's initial state. This does not include the handle errors state.\n* @param {array} specificState - an array of strings that correspond with a piece of state\n*/\nexport function resetStore(...specificState) {\n\n  return async function(dispatch) {\n\n    for (let i = 0; i < specificState.length; i++) {\n      if (specificState[i] === \"artists\") dispatch(resetArtists());\n      if (specificState[i] === \"albums\") dispatch(resetAlbums());\n      if (specificState[i] === \"tracks\") dispatch(resetTracks());\n      if (specificState[i] === \"lyrics\") dispatch(resetLyrics());\n      if (specificState[i] === \"translation\") dispatch(resetTranslation());\n      if (specificState[i] === \"searchResults\") dispatch(resetSearchResults());\n      if (specificState[i] === \"selectedTrack\") dispatch(resetSelectedTrack());\n    };\n  };\n};\n\nfunction resetArtists() {\n  return {type: RESET_ARTISTS};\n};\n\nfunction resetAlbums() {\n  return {type: RESET_ALBUMS};\n};\n\nfunction resetTracks() {\n  return {type: RESET_TRACKS};\n};\n\nfunction resetLyrics() {\n  return {type: RESET_LYRICS};\n};\n\nfunction resetTranslation() {\n  return {type: RESET_TRANSLATION};\n};\n\nfunction resetSearchResults() {\n  return {type: RESET_SEARCH_RESULTS};\n};\n\nfunction resetSelectedTrack() {\n  return {type: RESET_SELECTED_TRACK};\n};"]},"metadata":{},"sourceType":"module"}