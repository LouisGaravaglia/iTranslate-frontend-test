{"ast":null,"code":"import { GET_ALL_ARTISTS, UPDATE_GENERAL_ERROR } from \"../../../actionTypes\";\nimport BackendCall from \"../../../BackendCall\";\n/**\n* Makes a call to the backend to get an array of all artists and their spotify ids\n* that have at least one track that contains lyrics and updates allArtist state.\n* This will be displayed in the BrowseByArtists component.\n*/\n\nexport function getAllArtists() {\n  return async function (dispatch) {\n    try {\n      const artists = await BackendCall.getArtistsAndArtistIds();\n      dispatch(addArtists(artists));\n    } catch (e) {\n      dispatch(updateGeneralError(true));\n    }\n\n    ;\n  };\n}\n;\n\nfunction addArtists(artists) {\n  return {\n    type: GET_ALL_ARTISTS,\n    artists\n  };\n}\n\n;\n\nfunction updateGeneralError(generalError) {\n  return {\n    type: UPDATE_GENERAL_ERROR,\n    generalError\n  };\n}\n\n;","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/actionCreators/BrowseRoute/Artists/getAllArtistsCreator.js"],"names":["GET_ALL_ARTISTS","UPDATE_GENERAL_ERROR","BackendCall","getAllArtists","dispatch","artists","getArtistsAndArtistIds","addArtists","e","updateGeneralError","type","generalError"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,oBAAzB,QAAoD,sBAApD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,GAAyB;AAE9B,SAAO,gBAAeC,QAAf,EAAyB;AAC9B,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMH,WAAW,CAACI,sBAAZ,EAAtB;AACAF,MAAAA,QAAQ,CAACG,UAAU,CAACF,OAAD,CAAX,CAAR;AACD,KAHD,CAGE,OAAMG,CAAN,EAAS;AACTJ,MAAAA,QAAQ,CAACK,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACD;;AAAA;AACF,GAPD;AAQD;AAAA;;AAED,SAASF,UAAT,CAAoBF,OAApB,EAA6B;AAC3B,SAAO;AAACK,IAAAA,IAAI,EAAEV,eAAP;AAAwBK,IAAAA;AAAxB,GAAP;AACD;;AAAA;;AAED,SAASI,kBAAT,CAA4BE,YAA5B,EAA0C;AACxC,SAAO;AAACD,IAAAA,IAAI,EAAET,oBAAP;AAA6BU,IAAAA;AAA7B,GAAP;AACD;;AAAA","sourcesContent":["import {GET_ALL_ARTISTS, UPDATE_GENERAL_ERROR} from \"../../../actionTypes\";\nimport BackendCall from \"../../../BackendCall\";\n\n/**\n* Makes a call to the backend to get an array of all artists and their spotify ids\n* that have at least one track that contains lyrics and updates allArtist state.\n* This will be displayed in the BrowseByArtists component.\n*/\nexport function getAllArtists() {\n\n  return async function(dispatch) {\n    try {\n      const artists = await BackendCall.getArtistsAndArtistIds();\n      dispatch(addArtists(artists));\n    } catch(e) {\n      dispatch(updateGeneralError(true));\n    };\n  };\n};\n\nfunction addArtists(artists) {\n  return {type: GET_ALL_ARTISTS, artists};\n};\n\nfunction updateGeneralError(generalError) {\n  return {type: UPDATE_GENERAL_ERROR, generalError};\n};"]},"metadata":{},"sourceType":"module"}