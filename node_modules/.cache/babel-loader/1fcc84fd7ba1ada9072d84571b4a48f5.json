{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/SearchResultList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchResult from \"./SearchResult\";\nimport PaginationSlider from \"./PaginationSlider\";\n\nconst SearchResultList = ({\n  resultsArray,\n  handleSearch,\n  itemsPerPage,\n  typeOfResults,\n  loadingIcon,\n  typeOfTracks,\n  typeOfArtists,\n  typeOfAlbums\n}) => {\n  _s();\n\n  const [sliderVal, setSliderVal] = useState(0);\n  const resultsInView = resultsArray.slice(sliderVal * itemsPerPage, sliderVal * itemsPerPage + itemsPerPage);\n  const needsPaginationSlider = resultsArray.length > itemsPerPage;\n\n  const updateResultsInView = val => {\n    setSliderVal(val);\n  }; ////////////////////////////////////////////////////  SEARCH RESULTS  ////////////////////////////////////////////////////\n\n\n  let displaySearchResults;\n  if (typeOfResults === \"search-results\") displaySearchResults = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Box\",\n      children: [loadingIcon, resultsInView.map((r, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n        index: i,\n        typeOfResults: \"search-results\",\n        handleClick: handleSearch,\n        previewURL: r.preview_url,\n        artist: r.artists[0].name,\n        album: r.album.name,\n        track: r.name,\n        musicObject: r\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), needsPaginationSlider && /*#__PURE__*/_jsxDEV(PaginationSlider, {\n      resultsArray: resultsArray,\n      itemsPerPage: itemsPerPage,\n      handleSliderChange: updateResultsInView,\n      containerClass: \"Main-Pagination-Slider-Container\",\n      sliderClass: \"Main-Pagination-Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }, this), !needsPaginationSlider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main-Pagination-Slider-Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  DISPLAY ARTISTS  ////////////////////////////////////////////////////\n\n  let displayArtists;\n  if (typeOfResults === \"artists\") displayArtists = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Box\",\n      children: [loadingIcon, resultsInView.map((r, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n        index: i,\n        typeOfResults: \"artists\",\n        handleClick: handleSearch,\n        artist: r.artistName,\n        spotify_id: r.artistId,\n        typeOfArtists: typeOfArtists,\n        needsPaginationSlider: needsPaginationSlider\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), needsPaginationSlider && /*#__PURE__*/_jsxDEV(PaginationSlider, {\n      resultsArray: resultsArray,\n      itemsPerPage: itemsPerPage,\n      handleSliderChange: updateResultsInView,\n      containerClass: \"Main-Pagination-Slider-Container\",\n      sliderClass: \"Main-Pagination-Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  DISPLAY ALBUMS  ////////////////////////////////////////////////////\n\n  let displayAlbums;\n  if (typeOfResults === \"albums\") displayAlbums = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Browse-Albums\",\n      children: resultsInView.map((r, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n        index: i,\n        typeOfResults: \"albums\",\n        handleClick: handleSearch,\n        name: r.albumName,\n        id: r.albumId,\n        image: r.albumImg,\n        typeOfAlbums: typeOfAlbums\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), needsPaginationSlider && /*#__PURE__*/_jsxDEV(PaginationSlider, {\n      resultsArray: resultsArray,\n      itemsPerPage: itemsPerPage,\n      handleSliderChange: updateResultsInView,\n      containerClass: \"Main-Pagination-Slider-Container\",\n      sliderClass: \"Main-Pagination-Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  DISPLAY TRACKS  ////////////////////////////////////////////////////\n\n  let displayTracks;\n  if (typeOfResults === \"tracks\") displayTracks = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Box\",\n      children: resultsInView.map((r, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n        index: i,\n        typeOfResults: \"tracks\",\n        handleClick: handleSearch,\n        artistName: r.artistName,\n        trackName: r.trackName,\n        previewURL: r.previewURL,\n        musicObject: r,\n        typeOfTracks: typeOfTracks,\n        needsPaginationSlider: needsPaginationSlider\n      }, r.trackId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), needsPaginationSlider && /*#__PURE__*/_jsxDEV(PaginationSlider, {\n      resultsArray: resultsArray,\n      itemsPerPage: itemsPerPage,\n      handleSliderChange: updateResultsInView,\n      containerClass: \"Main-Pagination-Slider-Container\",\n      sliderClass: \"Main-Pagination-Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  DISPLAY GENRES  ////////////////////////////////////////////////////\n\n  let displayGenres;\n  if (typeOfResults === \"genres\") displayGenres = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Box\",\n      children: resultsInView.map((r, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n        index: i,\n        typeOfResults: \"genres\",\n        handleClick: handleSearch,\n        genre: r\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), needsPaginationSlider && /*#__PURE__*/_jsxDEV(PaginationSlider, {\n      resultsArray: resultsArray,\n      itemsPerPage: itemsPerPage,\n      handleSliderChange: updateResultsInView,\n      containerClass: \"Main-Pagination-Slider-Container\",\n      sliderClass: \"Main-Pagination-Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }, this), !needsPaginationSlider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main-Pagination-Slider-Placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  DANCEABILITY RESULTS  ////////////////////////////////////////////////////\n\n  let displayDanceabilityTracks;\n  if (typeOfResults === \"danceability-results\") displayDanceabilityTracks = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Danceability-Result-Box\",\n      children: resultsArray.length && resultsInView.map((r, i) => /*#__PURE__*/_jsxDEV(SearchResult, {\n        index: i,\n        typeOfResults: \"danceability-results\",\n        previewURL: r.previewURL,\n        handleClick: handleSearch,\n        artist: r.artistName,\n        album: r.albumName,\n        track: r.trackName,\n        musicObject: r,\n        typeOfTracks: \"danceability\"\n      }, r.trackId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 61\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), needsPaginationSlider && /*#__PURE__*/_jsxDEV(PaginationSlider, {\n      resultsArray: resultsArray,\n      itemsPerPage: itemsPerPage,\n      handleSliderChange: updateResultsInView,\n      containerClass: \"Danceability-Pagination-Slider-Container\",\n      sliderClass: \"Danceability-Pagination-Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }, this), !needsPaginationSlider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Temp-v2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true); ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displaySearchResults, displayArtists, displayAlbums, displayTracks, displayGenres, displayDanceabilityTracks]\n  }, void 0, true);\n};\n\n_s(SearchResultList, \"MU+K7diopTl2mOo3AS106X+8bkw=\");\n\n_c = SearchResultList;\nexport default SearchResultList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResultList\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/SearchResultList.js"],"names":["React","useState","SearchResult","PaginationSlider","SearchResultList","resultsArray","handleSearch","itemsPerPage","typeOfResults","loadingIcon","typeOfTracks","typeOfArtists","typeOfAlbums","sliderVal","setSliderVal","resultsInView","slice","needsPaginationSlider","length","updateResultsInView","val","displaySearchResults","map","r","i","preview_url","artists","name","album","id","displayArtists","artistName","artistId","displayAlbums","albumName","albumId","albumImg","displayTracks","trackName","previewURL","trackId","displayGenres","displayDanceabilityTracks"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport SearchResult from \"./SearchResult\";\nimport PaginationSlider from \"./PaginationSlider\";\n\nconst SearchResultList = ({resultsArray, handleSearch, itemsPerPage, typeOfResults, loadingIcon, typeOfTracks, typeOfArtists, typeOfAlbums}) => {\n  const [sliderVal, setSliderVal] = useState(0);\n  const resultsInView = resultsArray.slice(sliderVal * itemsPerPage, (sliderVal * itemsPerPage) + itemsPerPage);\n  const needsPaginationSlider = resultsArray.length > itemsPerPage;\n  \n  const updateResultsInView = (val) => {\n    setSliderVal(val);\n  };\n\n////////////////////////////////////////////////////  SEARCH RESULTS  ////////////////////////////////////////////////////\n\n  let displaySearchResults;\n\n  if (typeOfResults === \"search-results\") displaySearchResults = (\n    <>\n      <div className=\"Result-Box\">\n        {loadingIcon}\n        {resultsInView.map((r, i) => <SearchResult key={r.id} index={i} typeOfResults=\"search-results\" handleClick={handleSearch} previewURL={r.preview_url} artist={r.artists[0].name} album={r.album.name} track={r.name} musicObject={r}/>)}\n      </div> \n      {needsPaginationSlider && <PaginationSlider resultsArray={resultsArray} itemsPerPage={itemsPerPage} handleSliderChange={updateResultsInView} containerClass=\"Main-Pagination-Slider-Container\" sliderClass=\"Main-Pagination-Slider\"/>}\n      {!needsPaginationSlider && <div className=\"Main-Pagination-Slider-Placeholder\"></div>}\n    </>\n  );\n\n////////////////////////////////////////////////////  DISPLAY ARTISTS  ////////////////////////////////////////////////////\n\n  let displayArtists;\n\n  if (typeOfResults === \"artists\") displayArtists = (\n    <>\n      <div className=\"Result-Box\">\n        {loadingIcon}\n        {resultsInView.map((r, i) => <SearchResult key={i} index={i} typeOfResults=\"artists\" handleClick={handleSearch} artist={r.artistName} spotify_id={r.artistId} typeOfArtists={typeOfArtists} needsPaginationSlider={needsPaginationSlider}/>)}\n      </div>\n      {needsPaginationSlider && <PaginationSlider  resultsArray={resultsArray} itemsPerPage={itemsPerPage} handleSliderChange={updateResultsInView} containerClass=\"Main-Pagination-Slider-Container\" sliderClass=\"Main-Pagination-Slider\"/>}\n    </>\n  );\n\n////////////////////////////////////////////////////  DISPLAY ALBUMS  ////////////////////////////////////////////////////\n\n  let displayAlbums;\n\n  if (typeOfResults === \"albums\") displayAlbums = (\n    <>\n      <div className=\"Browse-Albums\">\n        {resultsInView.map((r, i) => <SearchResult key={i} index={i} typeOfResults=\"albums\" handleClick={handleSearch} name={r.albumName} id={r.albumId} image={r.albumImg} typeOfAlbums={typeOfAlbums}/>)}\n      </div>\n      {needsPaginationSlider && <PaginationSlider  resultsArray={resultsArray} itemsPerPage={itemsPerPage} handleSliderChange={updateResultsInView} containerClass=\"Main-Pagination-Slider-Container\" sliderClass=\"Main-Pagination-Slider\"/>}\n    </>\n  );\n\n////////////////////////////////////////////////////  DISPLAY TRACKS  ////////////////////////////////////////////////////\n\n  let displayTracks;\n\n  if (typeOfResults === \"tracks\") displayTracks = (\n    <>\n      <div className=\"Result-Box\">\n        {resultsInView.map((r, i) => <SearchResult key={r.trackId} index={i} typeOfResults=\"tracks\" handleClick={handleSearch} artistName={r.artistName} trackName={r.trackName} previewURL={r.previewURL} musicObject={r} typeOfTracks={typeOfTracks} needsPaginationSlider={needsPaginationSlider}/>)}\n      </div>\n      {needsPaginationSlider && <PaginationSlider  resultsArray={resultsArray} itemsPerPage={itemsPerPage} handleSliderChange={updateResultsInView} containerClass=\"Main-Pagination-Slider-Container\" sliderClass=\"Main-Pagination-Slider\"/>}\n    </>\n  );\n\n\n////////////////////////////////////////////////////  DISPLAY GENRES  ////////////////////////////////////////////////////\n\n  let displayGenres;\n\n  if (typeOfResults === \"genres\") displayGenres = (\n    <>\n      <div className=\"Result-Box\">\n        {resultsInView.map((r, i) => <SearchResult key={i} index={i} typeOfResults=\"genres\" handleClick={handleSearch} genre={r}/>)}\n      </div> \n      {needsPaginationSlider && <PaginationSlider  resultsArray={resultsArray} itemsPerPage={itemsPerPage} handleSliderChange={updateResultsInView} containerClass=\"Main-Pagination-Slider-Container\" sliderClass=\"Main-Pagination-Slider\"/>}\n      {!needsPaginationSlider && <div className=\"Main-Pagination-Slider-Placeholder\"></div>}\n    </>\n  );\n\n////////////////////////////////////////////////////  DANCEABILITY RESULTS  ////////////////////////////////////////////////////\n\n  let displayDanceabilityTracks;\n\n  if (typeOfResults === \"danceability-results\") displayDanceabilityTracks = (\n    <>\n      <div className=\"Danceability-Result-Box\">\n        {resultsArray.length && resultsInView.map((r, i) => <SearchResult key={r.trackId} index={i} typeOfResults=\"danceability-results\" previewURL={r.previewURL} handleClick={handleSearch} artist={r.artistName} album={r.albumName} track={r.trackName} musicObject={r} typeOfTracks=\"danceability\"/>)}\n      </div>\n      {needsPaginationSlider && <PaginationSlider  resultsArray={resultsArray} itemsPerPage={itemsPerPage} handleSliderChange={updateResultsInView} containerClass=\"Danceability-Pagination-Slider-Container\" sliderClass=\"Danceability-Pagination-Slider\"/>}\n      {!needsPaginationSlider && <div className=\"Temp-v2\"></div>}\n    </>\n  );\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <>\n      {displaySearchResults}\n      {displayArtists}\n      {displayAlbums}\n      {displayTracks}\n      {displayGenres}\n      {displayDanceabilityTracks}\n    </>\n  );\n};\n\nexport default SearchResultList;"]},"metadata":{},"sourceType":"module"}