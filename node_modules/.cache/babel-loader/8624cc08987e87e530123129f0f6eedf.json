{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/PaginationSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider'; //CUSTOM STYLING FOR MUI SLIDER\n\nconst MyPaginationSlider = withStyles({\n  root: {\n    color: \"#fff\",\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -10,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 14px)\",\n    top: -22,\n    \"& *\": {\n      background: \"transparent\",\n      color: \"#000\"\n    }\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    opacity: 0.5,\n    backgroundColor: \"#bfbfbf\"\n  }\n})(Slider);\nconst PaginationSlider = /*#__PURE__*/memo(_c = _s(({\n  resultsArray,\n  itemsPerPage,\n  handleSliderChange,\n  containerClass,\n  sliderClass\n}) => {\n  _s();\n\n  const [sliderVal, setSliderVal] = useState(0);\n  const multipleOf = resultsArray.length % itemsPerPage === 0;\n  let maxSliderVal = Math.floor(resultsArray.length / itemsPerPage);\n  if (!multipleOf) maxSliderVal += 1;\n\n  const handleChange = (event, newValue) => {\n    setSliderVal(newValue);\n    handleSliderChange(newValue);\n  }; ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerClass,\n    children: /*#__PURE__*/_jsxDEV(MyPaginationSlider, {\n      className: sliderClass,\n      color: \"\",\n      value: sliderVal,\n      max: maxSliderVal - 1,\n      min: 0,\n      step: 1,\n      onChange: handleChange,\n      \"aria-labelledby\": \"continuous-slider\",\n      track: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}, \"MU+K7diopTl2mOo3AS106X+8bkw=\"));\n_c2 = PaginationSlider;\nexport default PaginationSlider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PaginationSlider$memo\");\n$RefreshReg$(_c2, \"PaginationSlider\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/PaginationSlider.js"],"names":["React","useState","memo","withStyles","Slider","MyPaginationSlider","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","top","background","track","borderRadius","rail","opacity","PaginationSlider","resultsArray","itemsPerPage","handleSliderChange","containerClass","sliderClass","sliderVal","setSliderVal","multipleOf","length","maxSliderVal","Math","floor","handleChange","event","newValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,IAAzB,QAAoC,OAApC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAEA;;AACA,MAAMC,kBAAkB,GAAGF,UAAU,CAAC;AAClCG,EAAAA,IAAI,EAAE;AACNC,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE;AAFF,GAD4B;AAKpCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,MAAM,EAAE,EADH;AAELE,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,eAAe,EAAE,MAHZ;AAILC,IAAAA,MAAM,EAAE,wBAJH;AAKLC,IAAAA,SAAS,EAAE,CAAC,EALP;AAMLC,IAAAA,UAAU,EAAE,CAAC,EANR;AAOL,gCAA4B;AAC1BC,MAAAA,SAAS,EAAE;AADe;AAPvB,GAL6B;AAgBpCC,EAAAA,MAAM,EAAE,EAhB4B;AAiBpCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,mBADI;AAEVC,IAAAA,GAAG,EAAE,CAAC,EAFI;AAGV,WAAO;AACLC,MAAAA,UAAU,EAAE,aADP;AAELb,MAAAA,KAAK,EAAE;AAFF;AAHG,GAjBwB;AAyBpCc,EAAAA,KAAK,EAAE;AACLb,IAAAA,MAAM,EAAE,CADH;AAELc,IAAAA,YAAY,EAAE;AAFT,GAzB6B;AA6BpCC,EAAAA,IAAI,EAAE;AACJf,IAAAA,MAAM,EAAE,CADJ;AAEJc,IAAAA,YAAY,EAAE,CAFV;AAGJE,IAAAA,OAAO,EAAE,GAHL;AAIJb,IAAAA,eAAe,EAAE;AAJb;AA7B8B,CAAD,CAAV,CAmCxBP,MAnCwB,CAA3B;AAqCA,MAAMqB,gBAAgB,gBAAGvB,IAAI,SAAC,CAAC;AAACwB,EAAAA,YAAD;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA,kBAA7B;AAAiDC,EAAAA,cAAjD;AAAiEC,EAAAA;AAAjE,CAAD,KAAmF;AAAA;;AAC/G,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMgC,UAAU,GAAGP,YAAY,CAACQ,MAAb,GAAsBP,YAAtB,KAAuC,CAA1D;AACA,MAAIQ,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWX,YAAY,CAACQ,MAAb,GAAsBP,YAAjC,CAAnB;AAEA,MAAI,CAACM,UAAL,EAAiBE,YAAY,IAAI,CAAhB;;AAEjB,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCR,IAAAA,YAAY,CAACQ,QAAD,CAAZ;AACAZ,IAAAA,kBAAkB,CAACY,QAAD,CAAlB;AACD,GAHD,CAP+G,CAYjH;;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAEX,cAAhB;AAAA,2BACE,QAAC,kBAAD;AAAoB,MAAA,SAAS,EAAEC,WAA/B;AAA4C,MAAA,KAAK,EAAC,EAAlD;AAAqD,MAAA,KAAK,EAAEC,SAA5D;AAAuE,MAAA,GAAG,EAAEI,YAAY,GAAG,CAA3F;AAA8F,MAAA,GAAG,EAAE,CAAnG;AAAsG,MAAA,IAAI,EAAE,CAA5G;AAA+G,MAAA,QAAQ,EAAEG,YAAzH;AAAuI,yBAAgB,mBAAvJ;AAA2K,MAAA,KAAK,EAAE;AAAlL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnB4B,kCAA7B;MAAMb,gB;AAqBN,eAAeA,gBAAf","sourcesContent":["import React, {useState, memo} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\n//CUSTOM STYLING FOR MUI SLIDER\nconst MyPaginationSlider = withStyles({\n    root: {\n    color: \"#fff\",\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -10,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 14px)\",\n    top: -22,\n    \"& *\": {\n      background: \"transparent\",\n      color: \"#000\"\n    }\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    opacity: 0.5,\n    backgroundColor: \"#bfbfbf\"\n  }\n})(Slider);\n\nconst PaginationSlider = memo(({resultsArray, itemsPerPage, handleSliderChange, containerClass, sliderClass}) => {\n  const [sliderVal, setSliderVal] = useState(0);\n  const multipleOf = resultsArray.length % itemsPerPage === 0;\n  let maxSliderVal = Math.floor(resultsArray.length / itemsPerPage);\n\n  if (!multipleOf) maxSliderVal += 1;\n\n  const handleChange = (event, newValue) => {\n    setSliderVal(newValue);\n    handleSliderChange(newValue);\n  };\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <div className={containerClass}>\n      <MyPaginationSlider className={sliderClass} color=\"\" value={sliderVal} max={maxSliderVal - 1} min={0} step={1} onChange={handleChange} aria-labelledby=\"continuous-slider\" track={false}/>\n    </div>\n  );\n});\n\nexport default PaginationSlider;"]},"metadata":{},"sourceType":"module"}