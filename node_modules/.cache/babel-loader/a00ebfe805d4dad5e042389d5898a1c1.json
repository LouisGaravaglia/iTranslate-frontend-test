{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/SearchResult.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from 'react';\nimport BackendCall from \"./BackendCall\";\nimport Hover from \"./Hover\"; //REDUX IMPORTS\n\nimport { useDispatch } from \"react-redux\";\nimport { sendGeneralError } from \"./actionCreators/sendGeneralErrorCreator\";\nconst SearchResult = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const [albumHover, setAlbumHover] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSearchClick = async () => {\n    try {\n      const updatedTrack = await BackendCall.consolidateSelectedSearchResultInfo(props.musicObject);\n      props.handleClick(updatedTrack);\n    } catch (e) {\n      dispatch(sendGeneralError());\n    }\n\n    ;\n  };\n\n  const handleArtistsClick = () => {\n    props.handleClick(props.spotify_id);\n  };\n\n  const handleAlbumClick = () => {\n    props.handleClick(props.id);\n  };\n\n  const handleTrackClick = () => {\n    props.handleClick(props.musicObject);\n  };\n\n  const handleGenreClick = () => {\n    props.handleClick(props.genre);\n  }; ////////////////////////////////////////////////////  SEARCH RESULTS  ////////////////////////////////////////////////////\n\n\n  let displaySearchResults;\n  if (props.typeOfResults === \"search-results\") displaySearchResults = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-Result-Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Main-TopFiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Hover, {\n      scale: 1.05,\n      previewURL: props.previewURL ? props.previewURL : 'No URL',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleSearchClick,\n        className: \"Result-Subheader Search-Track-Subheader\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Result-Header Search-Track-Header\",\n          children: props.track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 93\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 168\n        }, this), \" by \", props.artist, \" on \", props.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  DANCEABILITY RESULTS  ////////////////////////////////////////////////////\n\n  let displayDanceabilityResults;\n  if (props.typeOfResults === \"danceability-results\") displayDanceabilityResults = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Danceability-Result-Container\",\n    children: /*#__PURE__*/_jsxDEV(Hover, {\n      scale: 1.05,\n      previewURL: props.previewURL ? props.previewURL : 'No URL',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleTrackClick,\n        className: \"Result-Subheader Danceability-Track-Subheader\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Result-Header Danceability-Track-Header\",\n          children: props.track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 98\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 179\n        }, this), \" by \", props.artist, \" on \", props.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  ARTISTS  ////////////////////////////////////////////////////\n\n  let artistClassName;\n  if (props.typeOfArtists === \"genre\") artistClassName = \"Result-Main Genre-Artists\";\n  if (props.typeOfArtists === \"artists\") artistClassName = \"Result-Main Artist-Artists\";\n  let displayArtists;\n  if (props.typeOfResults === \"artists\") displayArtists = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-Result-Container\",\n    children: [props.needsPaginationSlider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Main-TopFiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Hover, {\n      scale: 1.05,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleArtistsClick,\n        className: artistClassName,\n        children: props.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  ALBUMS  ////////////////////////////////////////////////////\n\n  let albumsClassName;\n  if (props.typeOfAlbums === \"genre\") albumsClassName = \"Album-Name Genre-Albums\";\n  if (props.typeOfAlbums === \"artists\") albumsClassName = \"Album-Name Artist-Albums\";\n  let displayAlbums;\n  if (props.typeOfResults === \"albums\") displayAlbums = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Album\",\n    onMouseEnter: () => setAlbumHover(true),\n    onMouseLeave: () => setAlbumHover(false),\n    children: /*#__PURE__*/_jsxDEV(Hover, {\n      scale: 1.05,\n      children: [albumHover && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Album-Name-Box\",\n        onClick: handleAlbumClick,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: albumsClassName,\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  TRACKS  ////////////////////////////////////////////////////\n\n  let trackClassNames;\n  if (props.typeOfTracks === \"artists\") trackClassNames = \"Result-Main Artist-Tracks\";\n  if (props.typeOfTracks === \"genre\") trackClassNames = \"Result-Main Genre-Tracks\";\n  let displayTracks;\n  if (props.typeOfResults === \"tracks\") displayTracks = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-Result-Container\",\n    children: [props.needsPaginationSlider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Main-TopFiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Hover, {\n      scale: 1.05,\n      previewURL: props.previewURL ? props.previewURL : 'No URL',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleTrackClick,\n        className: trackClassNames,\n        children: props.trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  GENRES  ////////////////////////////////////////////////////\n\n  let displayGenres;\n  if (props.typeOfResults === \"genres\") displayGenres = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-Result-Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Result-Main-TopFiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Hover, {\n      scale: 1.05,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleGenreClick,\n        className: \"Result-Main Genre-Genres\",\n        children: props.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this); ////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [displaySearchResults, displayDanceabilityResults, displayArtists, displayAlbums, displayTracks, displayGenres]\n  }, void 0, true);\n}, \"x3PZDs/jzzna20iU9Bq9Szlt+7I=\", false, function () {\n  return [useDispatch];\n}));\n_c2 = SearchResult;\nexport default SearchResult;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchResult$memo\");\n$RefreshReg$(_c2, \"SearchResult\");","map":{"version":3,"sources":["/Users/louieg3/Documents/Web_development/iTranslate/Frontend/src/SearchResult.js"],"names":["React","memo","useState","BackendCall","Hover","useDispatch","sendGeneralError","SearchResult","props","albumHover","setAlbumHover","dispatch","handleSearchClick","updatedTrack","consolidateSelectedSearchResultInfo","musicObject","handleClick","e","handleArtistsClick","spotify_id","handleAlbumClick","id","handleTrackClick","handleGenreClick","genre","displaySearchResults","typeOfResults","previewURL","track","artist","album","displayDanceabilityResults","artistClassName","typeOfArtists","displayArtists","needsPaginationSlider","albumsClassName","typeOfAlbums","displayAlbums","name","image","trackClassNames","typeOfTracks","displayTracks","trackName","displayGenres"],"mappings":"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","sourcesContent":["import React, {memo, useState} from 'react';\nimport BackendCall from \"./BackendCall\";\nimport Hover from \"./Hover\";\n//REDUX IMPORTS\nimport {useDispatch} from \"react-redux\";\nimport {sendGeneralError} from \"./actionCreators/sendGeneralErrorCreator\";\n\nconst SearchResult = memo((props) => {\n  const [albumHover, setAlbumHover] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSearchClick = async () => {\n    try {\n      const updatedTrack = await BackendCall.consolidateSelectedSearchResultInfo(props.musicObject)\n      props.handleClick(updatedTrack);\n    } catch(e) {\n      dispatch(sendGeneralError());\n    };\n  };\n\n  const handleArtistsClick = () => {\n    props.handleClick(props.spotify_id);\n  };\n\n  const handleAlbumClick = () => {\n    props.handleClick(props.id);\n  };\n\n  const handleTrackClick = () => {\n    props.handleClick(props.musicObject);\n  };\n\n  const handleGenreClick = () => {\n    props.handleClick(props.genre);\n  };\n\n////////////////////////////////////////////////////  SEARCH RESULTS  ////////////////////////////////////////////////////\n\n  let displaySearchResults;\n\n  if (props.typeOfResults === \"search-results\") displaySearchResults = (\n    <div className=\"Main-Result-Container\">\n    <div className=\"Result-Main-TopFiller\"></div>\n      <Hover scale={1.05} previewURL={props.previewURL ? props.previewURL : 'No URL'}>\n        <p onClick={handleSearchClick} className=\"Result-Subheader Search-Track-Subheader\">{<span className=\"Result-Header Search-Track-Header\">{props.track}</span>} {<br></br>} by {props.artist} on {props.album}</p>\n      </Hover>\n    </div>\n  );\n\n////////////////////////////////////////////////////  DANCEABILITY RESULTS  ////////////////////////////////////////////////////\n\n  let displayDanceabilityResults;\n\n  if (props.typeOfResults === \"danceability-results\") displayDanceabilityResults = (\n    <div className=\"Danceability-Result-Container\">\n      <Hover scale={1.05} previewURL={props.previewURL ? props.previewURL : 'No URL'}>\n        <p onClick={handleTrackClick} className=\"Result-Subheader Danceability-Track-Subheader\">{<span className=\"Result-Header Danceability-Track-Header\">{props.track}</span>} {<br></br>} by {props.artist} on {props.album}</p>\n      </Hover>\n    </div>\n  );\n\n////////////////////////////////////////////////////  ARTISTS  ////////////////////////////////////////////////////\n\n  let artistClassName;\n\n  if (props.typeOfArtists === \"genre\") artistClassName = \"Result-Main Genre-Artists\";\n  if (props.typeOfArtists === \"artists\") artistClassName = \"Result-Main Artist-Artists\";\n\n  let displayArtists;\n\n  if (props.typeOfResults === \"artists\") displayArtists = (\n    <div className=\"Main-Result-Container\">\n    {props.needsPaginationSlider && <div className=\"Result-Main-TopFiller\"></div>}\n      <Hover scale={1.05}>\n        <p onClick={handleArtistsClick} className={artistClassName}>{props.artist}</p>\n      </Hover>\n    </div>\n  );\n\n////////////////////////////////////////////////////  ALBUMS  ////////////////////////////////////////////////////\n\n  let albumsClassName;\n\n  if (props.typeOfAlbums === \"genre\") albumsClassName = \"Album-Name Genre-Albums\";\n  if (props.typeOfAlbums === \"artists\") albumsClassName = \"Album-Name Artist-Albums\";\n\n  let displayAlbums;\n\n  if (props.typeOfResults === \"albums\") displayAlbums = (\n    <div className=\"Album\" onMouseEnter={() => setAlbumHover(true)} onMouseLeave={() => setAlbumHover(false)}>\n      <Hover scale={1.05}>\n        {albumHover && \n        <div className=\"Album-Name-Box\" onClick={handleAlbumClick}>\n        <p className={albumsClassName}>{props.name}</p>\n        </div>\n        }\n        <img src={props.image} alt=\"\"/>\n      </Hover>\n    </div>\n  );\n\n////////////////////////////////////////////////////  TRACKS  ////////////////////////////////////////////////////\n\n  let trackClassNames;\n\n  if (props.typeOfTracks === \"artists\") trackClassNames = \"Result-Main Artist-Tracks\";\n  if (props.typeOfTracks === \"genre\") trackClassNames = \"Result-Main Genre-Tracks\";\n\n  let displayTracks;\n  \n  if (props.typeOfResults === \"tracks\") displayTracks = (\n    <div className=\"Main-Result-Container\">\n    {props.needsPaginationSlider && <div className=\"Result-Main-TopFiller\"></div>}\n      <Hover scale={1.05} previewURL={props.previewURL ? props.previewURL : 'No URL'}>\n        <p onClick={handleTrackClick} className={trackClassNames}>{props.trackName}</p>\n      </Hover>\n    </div>\n  );\n\n////////////////////////////////////////////////////  GENRES  ////////////////////////////////////////////////////\n\n  let displayGenres;\n\n  if (props.typeOfResults === \"genres\") displayGenres = (\n    <div className=\"Main-Result-Container\">\n    <div className=\"Result-Main-TopFiller\"></div>\n      <Hover scale={1.05}>\n        <p onClick={handleGenreClick} className=\"Result-Main Genre-Genres\">{props.genre}</p>\n      </Hover>\n    </div>\n  );\n\n////////////////////////////////////////////////////  RETURN  ////////////////////////////////////////////////////\n\n  return (\n    <>\n      {displaySearchResults}\n      {displayDanceabilityResults}\n      {displayArtists}\n      {displayAlbums}\n      {displayTracks}\n      {displayGenres}\n    </>\n  );\n});\n\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}